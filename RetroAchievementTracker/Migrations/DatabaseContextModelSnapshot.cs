// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RetroAchievementTracker.Database.Context;

#nullable disable

namespace RetroAchievementTracker.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.GameConsoles", b =>
                {
                    b.Property<int>("ConsoleID")
                        .HasColumnType("integer");

                    b.Property<string>("ConsoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ConsoleID");

                    b.ToTable("GameConsoles");
                });

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.GameCounts", b =>
                {
                    b.Property<int>("ConsoleId")
                        .HasColumnType("integer");

                    b.Property<int>("GameCount")
                        .HasColumnType("integer");

                    b.HasKey("ConsoleId");

                    b.ToTable("GameCounts");
                });

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.Games", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("AchievementCount")
                        .HasColumnType("integer");

                    b.Property<int>("ConsoleID")
                        .HasColumnType("integer");

                    b.Property<string>("ConsoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GameGenre")
                        .HasColumnType("text");

                    b.Property<string>("ImageBoxArt")
                        .HasColumnType("text");

                    b.Property<string>("ImageIcon")
                        .HasColumnType("text");

                    b.Property<string>("ImageIngame")
                        .HasColumnType("text");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlayersCasual")
                        .HasColumnType("integer");

                    b.Property<int?>("PlayersHardcore")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.TrackedGames", b =>
                {
                    b.Property<string>("UsernameGameID")
                        .HasColumnType("text");

                    b.Property<int>("GameID")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UsernameGameID");

                    b.ToTable("TrackedGames");
                });

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.UserData", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("HashedApiKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LoginToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("UserData");
                });

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.UserGameProgress", b =>
                {
                    b.Property<string>("UsernameGameID")
                        .HasColumnType("text");

                    b.Property<int>("AchievementsGained")
                        .HasColumnType("integer");

                    b.Property<int>("ConsoleID")
                        .HasColumnType("integer");

                    b.Property<int>("GameID")
                        .HasColumnType("integer");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("GamePercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("HardcoreMode")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UsernameGameID");

                    b.ToTable("UserGameProgress");
                });
#pragma warning restore 612, 618
        }
    }
}
