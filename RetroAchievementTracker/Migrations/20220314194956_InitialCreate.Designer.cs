// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetroAchievementTracker.Database.Context;
using RetroAchievementTracker.Database.Models;

#nullable disable

namespace RetroAchievementTracker.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220314194956_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.Achievements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AchievementDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AchievementTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberAwardedCasual")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberAwardedHardcore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PointsValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.CompletedGames", b =>
                {
                    b.Property<string>("UsernameGameID")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HardcoreMode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageIcon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsernameGameID");

                    b.HasIndex("UsernameGameID")
                        .IsUnique();

                    b.ToTable("CompletedGames");
                });

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.GameConsoles", b =>
                {
                    b.Property<int>("ConsoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConsoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ConsoleID");

                    b.HasIndex("ConsoleID")
                        .IsUnique();

                    b.ToTable("GameConsoles");
                });

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.Games", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AchievementCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConsoleID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameGenre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayersCasual")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayersHardcore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("imageIcon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("RetroAchievementTracker.Database.Models.UserData", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("HashedApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserData");
                });
#pragma warning restore 612, 618
        }
    }
}
